/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

/**
 *
 * @author dr
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSingleton = new javax.swing.JButton();
        btnFactory = new javax.swing.JButton();
        btnBuilder = new javax.swing.JButton();
        btnAdapter = new javax.swing.JButton();
        btnPrototype = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jLabel1.setText("Employee Management System");

        btnSingleton.setBackground(new java.awt.Color(204, 204, 204));
        btnSingleton.setText("Run Payroll System");
        btnSingleton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSingletonActionPerformed(evt);
            }
        });

        btnFactory.setBackground(new java.awt.Color(204, 204, 204));
        btnFactory.setText("Create Employee Type");
        btnFactory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactoryActionPerformed(evt);
            }
        });

        btnBuilder.setBackground(new java.awt.Color(204, 204, 204));
        btnBuilder.setText("Build Employee");
        btnBuilder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuilderActionPerformed(evt);
            }
        });

        btnAdapter.setBackground(new java.awt.Color(204, 204, 204));
        btnAdapter.setText("Adapt External Employee");
        btnAdapter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdapterActionPerformed(evt);
            }
        });

        btnPrototype.setBackground(new java.awt.Color(204, 204, 204));
        btnPrototype.setText("Clone Employee");
        btnPrototype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrototypeActionPerformed(evt);
            }
        });

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(312, 312, 312))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSingleton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFactory)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuilder, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPrototype, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAdapter)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSingleton)
                    .addComponent(btnFactory)
                    .addComponent(btnBuilder)
                    .addComponent(btnPrototype)
                    .addComponent(btnAdapter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSingletonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSingletonActionPerformed
    // Step 1: Testing Payroll System Singleton
    singleton.PayrollSystem payroll1 = singleton.PayrollSystem.getInstance();
    singleton.PayrollSystem payroll2 = singleton.PayrollSystem.getInstance();

    payroll1.processPayroll();

    // Verify if both instances are the same
    boolean payrollInstancesSame = (payroll1 == payroll2);

    // Step 2: Testing Database Connection Singleton
    singleton.DatabaseConnection db1 = singleton.DatabaseConnection.getConnection();
    singleton.DatabaseConnection db2 = singleton.DatabaseConnection.getConnection();

    // Adding employees
    db1.addEmployee(101, "John Doe");
    db1.addEmployee(102, "Jane Smith");

    // Querying employees
    String employee1 = db1.getEmployee(101);
    String employee2 = db2.getEmployee(102);

    // Updating an employee
    db2.updateEmployee(101, "Johnathan Doe");
    String updatedEmployee1 = db1.getEmployee(101);

    // Deleting an employee
    db1.deleteEmployee(102);
    String deletedEmployee2 = db2.getEmployee(102);

    // Verify if both instances are the same
    boolean dbConnectionsSame = (db1 == db2);

    // Update the text output with the results
    StringBuilder output = new StringBuilder();
    output.append("Payroll system executed using Singleton Pattern.\n")
          .append("Payroll Instances Same? ").append(payrollInstancesSame).append("\n")
          .append("Database Operations:\n")
          .append("Added Employee 101: ").append(employee1).append("\n")
          .append("Added Employee 102: ").append(employee2).append("\n")
          .append("Updated Employee 101: ").append(updatedEmployee1).append("\n")
          .append("Deleted Employee 102: ").append(deletedEmployee2).append("\n")
          .append("Database Connections Same? ").append(dbConnectionsSame).append("\n");

    txtOutput.setText(output.toString());
    }//GEN-LAST:event_btnSingletonActionPerformed

    private void btnFactoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFactoryActionPerformed
    factory.Employee employee = factory.EmployeeFactory.createEmployee("fulltime");
    txtOutput.setText("Factory Pattern: Created a Full-Time Employee.\n");
    employee.showEmployeeDetails();
    }//GEN-LAST:event_btnFactoryActionPerformed

    private void btnBuilderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuilderActionPerformed
    builder.Employee builtEmployee = new builder.Employee.EmployeeBuilder("Alice", "Part-Time")
            .setAge(28)
            .setSalary(20000)
            .setDepartment("HR")
            .build();
    txtOutput.setText("Builder Pattern: Employee Built.\n");
    builtEmployee.showEmployeeDetails();
    }//GEN-LAST:event_btnBuilderActionPerformed

    private void btnAdapterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdapterActionPerformed
    adapter.ExternalEmployee externalEmp = new adapter.ExternalEmployee("Mark Smith", "Contractor");
    adapter.Employee adaptedEmployee = new adapter.ExternalEmployeeAdapter(externalEmp);
    txtOutput.setText("Adapter Pattern: Adapted External Employee.\n");
    adaptedEmployee.showEmployeeDetails();
    }//GEN-LAST:event_btnAdapterActionPerformed

    private void btnPrototypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrototypeActionPerformed
    prototype.Employee originalEmployee = new prototype.Employee("John Doe", "Full-Time", 30, 50000);
    prototype.Employee clonedEmployee = (prototype.Employee) originalEmployee.clone();
    txtOutput.setText("Prototype Pattern: Employee Cloned.\nOriginal and Cloned Employee:\n");
    originalEmployee.showDetails();
    clonedEmployee.showDetails();
    }//GEN-LAST:event_btnPrototypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdapter;
    private javax.swing.JButton btnBuilder;
    private javax.swing.JButton btnFactory;
    private javax.swing.JButton btnPrototype;
    private javax.swing.JButton btnSingleton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
